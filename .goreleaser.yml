# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
project_name: sdpctl
env:
  - SNAPSHOT_VERSION={{ .Now.Format "2006.01.02" }}
before:
  hooks:
    - make clean
    - make deps
snapshot:
  name_template: "{{ if .IsSnapshot }}{{ .Env.SNAPSHOT_VERSION }}{{ else }}{{ .Tag }}{{ end }}"
changelog:
  use: github
  sort: desc
  groups:
  - title: Features
    regexp: '^.*feat(\([[:word:]]+\))??!?:.+$'
    order: 0
  - title: Bug Fixes
    regexp: '^.*bug(\([[:word:]]+\))??!?:.+$'
    order: 1
  - title: Dependencies
    regexp: '^.*dependabot(\([[:word:]]+\))??!?:.+$'
    order: 3
  - title: Others
    order: 999
  filters:
    exclude:
      - "^docs:"
      - "^CI:"
      - typo
github_urls:
  download: https://github.com/appgate/sdpctl/releases

builds:
  - <<: &build_defaults
      binary: "{{ .ProjectName }}"
      main: ./main.go
      buildmode: pie
      flags:
        - -trimpath
      ldflags:
        - -s -w -X "github.com/appgate/sdpctl/cmd.version={{ if .IsSnapshot }}{{ .Env.SNAPSHOT_VERSION }}-dev{{ else }}{{ .Version }}{{ end }}"
        - -X "github.com/appgate/sdpctl/cmd.commit={{ .FullCommit }}"
        - -X "github.com/appgate/sdpctl/cmd.buildDate={{ .Date }}"
        - -X "github.com/appgate/sdpctl/pkg/factory.dockerRegistry={{ .Env.DOCKER_REGISTRY_URL }}"
    id: linux
    goos: [linux]
    goarch: [amd64, arm64]
    env:
      - CGO_ENABLED=0

  - <<: *build_defaults
    id: macos
    goos: [darwin]
    goarch: [arm64, amd64]
    env:
      - CGO_ENABLED=1
    hooks:
      post:
        - "{{ .Env.HOOK_PATH }}/sign-macos.sh '{{ .Path }}'"

  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: [amd64]
    env:
      - CGO_ENABLED=0
    hooks:
      post:
        - "{{ .Env.HOOK_PATH }}/sign-windows.sh '{{ .Path }}'"

universal_binaries:
  - replace: false
    id: macos
archives:
  - format_overrides:
      - goos: windows
        format: zip
checksum:
  name_template: "checksums.txt"

nfpms:
  - homepage: https://www.appgate.com
    maintainer: Appgate Cybersecurity Inc <appgatesdp.support@appgate.com>
    description: |-
      Official command line tool for managing
      Appgate SDP Collectives
    license: MIT
    vendor: Appgate Cybersecurity, Inc
    section: utils
    formats:
      - deb
      - rpm
    contents:
      - src: ./build/bash_completion
        dst: /usr/share/bash-completion/completions/sdpctl
        file_info:
          mode: 0644
          group: root
      - src: ./build/man/*.gz
        dst: /usr/share/man/man3/
        file_info:
          group: root
          mode: 0644
      - src: LICENSE
        dst: /usr/share/doc/sdpctl/copyright
        file_info:
          group: root
          mode: 0644
    deb:
      lintian_overrides:
        - statically-linked-binary
        - changelog-file-missing-in-native-package
        - groff-message
        - no-manual-page
    rpm:
      compression: gzip

release:
  github:
    owner: appgate
    name: sdpctl
  draft: true

brews:
  - name: sdpctl
    commit_author:
      name: aitorbot
      email: aitorbot@appgate.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    folder: Formula
    homepage: "https://github.com/appgate/sdpctl/releases"
    description: "Official CLI tool for managing Appgate SDP Collectives"
    license: "MIT"
    install: |
      bin.install "sdpctl"
      generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
    test: |
      version_output = shell_output("#{bin}/sdpctl --version")
      assert_match "sdpctl version #{version}", version_output.split("\n")[0]

      profile_add = shell_output("#{bin}/sdpctl profile add test")
      expected = "Created profile test, run 'sdpctl profile list' to see all available profiles\n" \
                 "run 'sdpctl profile set test' to select the new profile"
      assert_match expected, profile_add

      profile_set = shell_output("#{bin}/sdpctl profile set test")
      expected = "test is selected as current sdp profile\n" \
                 "test is not configured yet, run 'sdpctl configure'"
      assert_match expected, profile_set

      configure = shell_output("#{bin}/sdpctl configure https://example.com:8443")
      expected = "Configuration updated successfully"
      assert_match expected, configure
    repository:
      owner: appgate
      name: homebrew-tap
      branch: "{{.ProjectName}}-{{.Tag}}"
      pull_request:
        enabled: true
        base:
          owner: appgate
          name: homebrew-tap
          branch: main
